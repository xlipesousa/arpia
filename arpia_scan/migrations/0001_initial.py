# Generated by Django 4.2.24 on 2025-10-16 02:09

import arpia_scan.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('arpia_core', '0006_tool_alter_script_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScanSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(default=arpia_scan.models._default_reference, editable=False, max_length=32, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('planned', 'Planejado'), ('ready', 'Pronto'), ('running', 'Em execução'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('canceled', 'Cancelado')], default='planned', max_length=20)),
                ('config_snapshot', models.JSONField(blank=True, default=dict)),
                ('macros_snapshot', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_sessions', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_sessions', to='arpia_core.project')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ScanTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('kind', models.CharField(choices=[('connectivity', 'Teste de conectividade'), ('discovery_rustscan', 'Descoberta rápida (Rustscan)'), ('discovery_nmap', 'Níveis de ruído (Nmap)'), ('custom', 'Personalizado')], default='custom', max_length=40)),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('queued', 'Na fila'), ('running', 'Em execução'), ('completed', 'Concluído'), ('failed', 'Falhou'), ('canceled', 'Cancelado')], default='pending', max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('progress', models.FloatField(default=0.0)),
                ('stdout', models.TextField(blank=True)),
                ('stderr', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('script', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scan_tasks', to='arpia_core.script')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='arpia_scan.scansession')),
                ('tool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scan_tasks', to='arpia_core.tool')),
                ('wordlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scan_tasks', to='arpia_core.wordlist')),
            ],
            options={
                'ordering': ('session', 'order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='ScanFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('summary', 'Resumo'), ('target', 'Alvo'), ('port', 'Porta'), ('service', 'Serviço'), ('note', 'Observação')], default='summary', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(blank=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('severity', models.CharField(blank=True, max_length=32)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='arpia_scan.scansession')),
                ('source_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='findings', to='arpia_scan.scantask')),
            ],
            options={
                'ordering': ('session', 'order', 'id'),
            },
        ),
        migrations.AddIndex(
            model_name='scantask',
            index=models.Index(fields=['session', 'kind'], name='idx_scan_task_session_kind'),
        ),
        migrations.AddIndex(
            model_name='scantask',
            index=models.Index(fields=['status', 'updated_at'], name='idx_scan_task_status'),
        ),
        migrations.AddIndex(
            model_name='scansession',
            index=models.Index(fields=['project', 'created_at'], name='idx_scan_session_project'),
        ),
        migrations.AddIndex(
            model_name='scansession',
            index=models.Index(fields=['status', 'created_at'], name='idx_scan_session_status'),
        ),
        migrations.AddIndex(
            model_name='scanfinding',
            index=models.Index(fields=['session', 'kind'], name='idx_scan_finding_session_kind'),
        ),
        migrations.AddIndex(
            model_name='scanfinding',
            index=models.Index(fields=['severity', 'session'], name='idx_scan_finding_severity'),
        ),
    ]
